name: iOS TestFlight (fixed)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Ensure bundler
        run: |
          ruby -v
          gem install bundler

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install global CLIs
        run: |
          npm i -g expo-cli eas-cli
          brew install cocoapods
          pod --version

      - name: Install JS deps (root)
        run: npm install

      - name: Prebuild iOS (Expo â†’ native at root)
        run: |
          npx expo prebuild -p ios --no-install --clean
          # guard: ensure ios/ exists
          if [ ! -d "ios" ]; then
            echo "::error::Expo prebuild did not create ios/; aborting."
            exit 1
          fi

           - name: Patch Podfile (remove privacy flag + add modular headers for jsinspector)
        working-directory: ios
        run: |
          set -e
          if [ -f Podfile ]; then
            # 1) Remove the unsupported privacy flag if present
            sed -i '' '/privacy_file_aggregation_enabled/d' Podfile || true

            # 2) Make React-jsinspector export a module map so Swift (ExpoModulesCore) can import it
            if ! grep -q "pod 'React-jsinspector', :modular_headers => true" Podfile; then
              # Insert a jsinspector pod line right after the use_react_native! call
              awk '
                BEGIN{done=0}
                /use_react_native!\(/ && done==0 {
                  print; 
                  print "  pod '\''React-jsinspector'\'', :modular_headers => true";
                  done=1; next
                }
                {print}
              ' Podfile > Podfile.tmp && mv Podfile.tmp Podfile
            fi
          fi

      - name: Install iOS pods
        working-directory: ios
        run: pod install --repo-update

      - name: Show iOS dir (debug)
        run: |
          ls -la ios
          echo "Workspace(s):"
          ls -la ios/*.xcworkspace || true

      - name: Bundle install (fastlane at root)
        run: bundle install --path vendor/bundle

      - name: Fastlane (CI beta to TestFlight)
        env:
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_API_KEY_P8: ${{ secrets.ASC_API_KEY_P8 }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          IOS_SCHEME: ${{ vars.IOS_SCHEME }}
        run: bundle exec fastlane ios ci_beta
