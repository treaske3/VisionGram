name: ios TestFlight via Expo EAS

on:
  workflow_dispatch:

jobs:
  build-submit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install
      - name: Expo login (EXPO_TOKEN)
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      - name: Write App Store Connect API key JSON
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_JSON }}" > asc_api_key.json
      - name: Install EAS CLI
        run: npm install --global eas-cli
      - name: Prepare ASC API key for eas.json
        run: |
          node -e "const fs = require('fs');
          let ascJson = {};
          try { ascJson = JSON.parse(fs.readFileSync('asc_api_key.json', 'utf8')); } catch (e) { ascJson = {}; }
          // Write the .p8 file from the key in ascJson
          if (ascJson.key) {
            fs.writeFileSync('asc_key.p8', ascJson.key);
          }
          let eas = {};
          try { eas = JSON.parse(fs.readFileSync('eas.json', 'utf8')); } catch (e) { eas = {}; }
          if (!eas.submit) eas.submit = {};
          if (!eas.submit.production) eas.submit.production = {};
          if (!eas.submit.production.ios) eas.submit.production.ios = {};
          if (ascJson.key_id) eas.submit.production.ios.ascApiKeyId = ascJson.key_id;
          if (ascJson.issuer_id) eas.submit.production.ios.ascApiKeyIssuerId = ascJson.issuer_id;
          eas.submit.production.ios.ascApiKeyPath = './asc_key.p8';
          // ensure companyName is set for first submission
          if (!eas.submit.production.ios.companyName || eas.submit.production.ios.companyName === '') {
            eas.submit.production.ios.companyName = 'VisionGram';
          }
          fs.writeFileSync('eas.json', JSON.stringify(eas, null, 2));"
      - name: EAS Build and Submit (ios)
        run: eas build --platform ios --profile production --non-interactive --auto-submit-with-profile production
