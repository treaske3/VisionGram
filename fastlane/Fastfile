# Fastfile
default_platform :ios

platform :ios do
  desc "CI: build and upload to TestFlight"
  lane :ci_beta do
    # 1. Create CI keychain (expects KEYCHAIN_PASSWORD env var)
    create_keychain(
      name: "ci_keychain",
      password: ENV.fetch("KEYCHAIN_PASSWORD"),
      default_keychain: true,
      timeout: 0 # no timeout
    )

    # 2. Load App Store Connect API key
    app_store_connect_api_key(
      key_id:      ENV.fetch("API_KEY_ID"),
      issuer_id:   ENV.fetch("API_KEY_ISSUER_ID"),
      key:         ENV.fetch("API_PRIVATE_KEY"),
      duration:    1200,
      in_house:    false
    )

    # 3. Locate the iOS workspace and scheme
    IOS_DIR      = "ios"
    xcworkspace  = Dir["#{IOS_DIR}/*.xcworkspace"].first || UI.user_error!("No .xcworkspace found in ios/")
    scheme_name  = ENV["IOS_SCHEME"] || "VisionGram"

    # 4. Determine provisioning profile name
    #    If $PROFILE_NAME isn’t set, fallback to the name you copied: "VisionGram App Store Profile"
    profile_name = ENV["PROFILE_NAME"].to_s.strip
    profile_name = "VisionGram App Store Profile" if profile_name.empty?
    UI.user_error!(
      "PROFILE_NAME env not set. Confirm the import step ran BEFORE Fastlane "\
      "and that the App Store .mobileprovision targets #{ENV['APP_IDENTIFIER']}."
    ) if profile_name.empty?

    # 5. Set the project’s team ID
    update_project_team(
      path:    File.join(IOS_DIR, "VisionGram.xcodeproj"),
      teamid:  ENV.fetch("TEAM_ID"),
      targets: ["VisionGram"]
    )

    # 6. Use manual signing for the Release build, specifying the distribution certificate & profile
    update_code_signing_settings(
      use_automatic_signing: false,
      code_sign_identity:    "Apple Distribution",
      profile_name:          profile_name,
      build_configuration:   "Release",
      targets:               ["VisionGram"],
      path:                  File.join(IOS_DIR, "VisionGram.xcodeproj")
    )

    # 7. Build the app using the imported profile & certificate
    build_ios_app(
      workspace:      xcworkspace,
      scheme:         scheme_name,
      export_method:  "app-store",
      output_directory: "./fastlane/build",
      clean:            true,
      export_options: {
        provisioningProfiles: {
          ENV.fetch("APP_IDENTIFIER") => profile_name
        },
        signingStyle: "manual"
      }
    )

  ensure
    # Always delete the keychain to avoid leaving secrets behind
    delete_keychain(name: "ci_keychain")
  end
end
